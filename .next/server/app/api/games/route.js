"use strict";(()=>{var e={};e.id=475,e.ids=[475],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},21623:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>y,originalPathname:()=>R,patchFetch:()=>E,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>$,staticGenerationAsyncStorage:()=>x,staticGenerationBailout:()=>h});var o={};r.r(o),r.d(o,{GET:()=>u});var a=r(95419),i=r(69108),n=r(99678),g=r(78070),s=r(81494),l=r(74343),p=r(11185),c=r.n(p);async function u(e){try{let t;let{searchParams:r}=new URL(e.url),o=r.get("category"),a="true"===r.get("featured"),i="true"===r.get("popular"),n=r.get("search"),p="true"===r.get("random"),u=Number(r.get("limit")||"20"),d=Number(r.get("page")||"1"),m=(d-1)*u;console.log("Connecting to database..."),await (0,s.Z)(),console.log("Connected to database");let x={};o&&(x.$or=[{"Genres.0":{$regex:RegExp(o,"i")}},{Genres:{$regex:RegExp(o,"i")}},{category:{$regex:RegExp(o,"i")}}]),a&&(x.featured=!0),i&&(x.popular=!0),n&&(x.$or?(x.$and=[{$or:x.$or},{$or:[{Title:{$regex:RegExp(n,"i")}},{title:{$regex:RegExp(n,"i")}},{Description:{$regex:RegExp(n,"i")}},{description:{$regex:RegExp(n,"i")}},{Genres:{$regex:RegExp(n,"i")}},{category:{$regex:RegExp(n,"i")}},{Developer:{$regex:RegExp(n,"i")}},{developer:{$regex:RegExp(n,"i")}}]}],delete x.$or):x.$or=[{Title:{$regex:RegExp(n,"i")}},{title:{$regex:RegExp(n,"i")}},{Description:{$regex:RegExp(n,"i")}},{description:{$regex:RegExp(n,"i")}},{Genres:{$regex:RegExp(n,"i")}},{category:{$regex:RegExp(n,"i")}},{Developer:{$regex:RegExp(n,"i")}},{developer:{$regex:RegExp(n,"i")}}]),console.log("Query:",JSON.stringify(x));let $=await l.Z.countDocuments(x);if(t=p?await l.Z.aggregate([{$match:x},{$sample:{size:u}}]):await l.Z.find(x).sort({createdAt:-1}).skip(m).limit(u).lean(),console.log(`Found ${t.length} games out of ${$} total`),0===t.length&&1===d){let e=c().connection.db;if(e){let t=await e.listCollections().toArray();console.log("Available collections:",t.map(e=>e.name))}}return g.Z.json({games:t,total:$,page:d,limit:u,pages:Math.ceil($/u),hasMore:m+t.length<$})}catch(t){console.error("Oyunlar getirilemedi:",t);let e=t instanceof Error?t.message:"Bilinmeyen hata";return g.Z.json({error:"Oyunlar getirilemedi",details:e},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/games/route",pathname:"/api/games",filename:"route",bundlePath:"app/api/games/route"},resolvedPagePath:"C:\\Users\\ibrya\\PycharmProjects\\pythonProject\\.venv\\Scripts\\codes\\Python_Projects_github\\Ads_v2\\Ads\\src\\app\\api\\games\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:x,serverHooks:$,headerHooks:y,staticGenerationBailout:h}=d,R="/api/games/route";function E(){return(0,n.patchFetch)({serverHooks:$,staticGenerationAsyncStorage:x})}},81494:(e,t,r)=>{r.d(t,{Z:()=>g});var o=r(11185),a=r.n(o);let i=process.env.MONGODB_URI||"mongodb://localhost:27017/games",n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null});let g=async function(){return n.conn||(n.promise||(n.promise=a().connect(i,{bufferCommands:!1}).then(e=>(console.log("MongoDB connected to:",i),e))),n.conn=await n.promise),n.conn}},74343:(e,t,r)=>{r.d(t,{Z:()=>n});var o=r(11185),a=r.n(o);let i=new(a()).Schema({title:{type:String,required:!0,trim:!0},description:{type:String,required:!1,trim:!0},category:{type:String,required:!0,trim:!0},thumbnail:{type:String,required:!1},url:{type:String,required:!1},featured:{type:Boolean,default:!1},popular:{type:Boolean,default:!1},createdAt:{type:Date,default:Date.now}},{timestamps:!0}),n=a().models.Game||a().model("Game",i)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,206],()=>r(21623));module.exports=o})();